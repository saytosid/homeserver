version: "3.3"

networks:
  internal:
  web:
    external: true

volumes:
  nextcloud:
  db:

services:
  traefik:  # https://traefik.io/blog/traefik-2-0-docker-101-fc2893944b9d/
    image: "traefik:v2.0.0"
    container_name: traefik
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --api # Mutually exclusive with api.insecure
      # - --api.insecure # Don't do that in production
      # - --log.level=DEBUG
      - --certificatesresolvers.le.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.le.acme.storage=/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --serversTransport.insecureSkipVerify=true  # Allow self-signed certs for https backends 
    labels:
      # reusable basic auth
      - traefik.http.middlewares.saytosid_auth.basicauth.users=${AUTH_PASSWORD}
      - traefik.http.middlewares.testers_auth.basicauth.users=${TESTER_AUTH_PASSWORD}

      # global redirect to https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https      
      - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.redirs.entrypoints=web"
      - "traefik.http.routers.redirs.middlewares=redirect-to-https"

      # Dashboard
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=saytosid_auth
      - traefik.http.routers.traefik.tls.certresolver=le
      - traefik.http.routers.traefik.entrypoints=websecure
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - type: bind
        source: ${PWD}/acme.json
        target: /acme.json
    networks:
      - web
  
  whoami:
    image: containous/whoami:v1.3.0
    labels:
      - traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN}`)
      - traefik.http.routers.whoami.tls.certresolver=le
      - traefik.http.routers.whoami.entrypoints=websecure
    networks:
      - web

  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - SERVERURL=auto
      - SERVERPORT=1194
      - PEERS=5
      - PEERDNS=auto
    volumes:
      - ./wireguard/config:/config
      - /lib/modules:/lib/modules
    ports:
      - 1194:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: always

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    restart: always
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
    expose:
      - "80"
      - "443"
    environment:
      - TZ=Europe/London
      - WEBPASSWORD=${PIHOLE_PWD}
    volumes:
       - './etc-pihole/:/etc/pihole/'
       - './etc-dnsmasq.d/:/etc/dnsmasq.d/'
    dns:
      - 127.0.0.1
      - 1.1.1.1
    cap_add:
      - NET_ADMIN
    labels:
      - traefik.http.routers.pihole.rule=Host(`pihole.${DOMAIN}`)
      - traefik.http.services.pihole.loadbalancer.server.port=80
      - traefik.http.routers.pihole.tls.certresolver=le
      - traefik.http.routers.pihole.entrypoints=websecure
      - traefik.http.routers.pihole.middlewares=saytosid_auth
    networks:
      - web

  nextcloud_db:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    volumes:
      - db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_DB_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
    networks:
      - internal

  nextcloud:
    image: nextcloud
    container_name: nextcloud
    expose:
      - 80
    links:
      - nextcloud_db:db
    volumes:
      - nextcloud:/var/www/html
    restart: always
    labels:
      - traefik.http.routers.nextcloud.rule=Host(`cloud.${DOMAIN}`)
      - traefik.http.services.nextcloud.loadbalancer.server.port=80
      - traefik.http.routers.nextcloud.tls.certresolver=le
      - traefik.http.routers.nextcloud.entrypoints=websecure
    networks:
      - web
      - internal

  code_server:
    image: linuxserver/code-server
    container_name: code_server
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - SUDO_PASSWORD=${VSCODE_SUDO_PASSWORD}  # Inside vscode terminal
    volumes:
      - ./code-server-data/config:/config
    expose:
      - 8443
    networks:
      - web
    restart: always
    labels:
      - traefik.http.routers.code_server.rule=Host(`code.${DOMAIN}`)
      - traefik.http.services.code_server.loadbalancer.server.port=8443
      - traefik.http.services.code_server.loadbalancer.server.scheme=http
      - traefik.http.routers.code_server.tls.certresolver=le
      - traefik.http.routers.code_server.entrypoints=websecure
      - traefik.http.routers.code_server.middlewares=saytosid_auth


  duckdns:
    image: linuxserver/duckdns
    container_name: duckdns
    environment:
      - TZ=Europe/London
      - SUBDOMAINS=${DUCKDNS_SUBDOMAIN}
      - TOKEN="${DUCKDNS_TOKEN}"
    volumes:
      - /path/to/appdata/config:/config
    restart: always
    networks:
      - web
