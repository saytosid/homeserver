version: "3"

networks:
  internal:
  web:
    external: true

services:
  reverseproxy:
    container_name: traefik
    image: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "8080"
    labels:
      traefik.enable: true
      traefik.frontend.rule: "Host:traefik.saytosid.duckdns.org"
      # get md5 from htpasswd or http://www.htaccesstools.com/htpasswd-generator/
      # and then double all $ to $$ to avoid docker-compose 
      traefik.frontend.auth.basic: "username:passwordMD5"
      traefik.port: 8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.toml:/traefik.toml
      - ./acme.json:/acme.json
    networks:
      - web

  openvpn-as:
    # READ Application Setup: https://hub.docker.com/r/linuxserver/openvpn-as/
    image: linuxserver/openvpn-as
    container_name: openvpn-as
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - INTERFACE=
    volumes:
      - ./openvpn-config:/config
    ports:
      - 9443:9443/tcp
      - 1194:1194/udp
      - 943:943/tcp  # Admin web UI
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.backend=openvpn-as"
      - "traefik.docker.network=web"
      - "traefik.frontend.rule=Host:vpn.saytosid.duckdns.org"
      - "traefik.port=943"
      - "traefik.protocol=https"
    networks:
      - web

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
    expose:
      - "80"
      - "443"
    environment:
      TZ: 'Europe/London'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    volumes:
       - './etc-pihole/:/etc/pihole/'
       - './etc-dnsmasq.d/:/etc/dnsmasq.d/'
    dns:
      - 127.0.0.1
      - 1.1.1.1
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.backend=pihole"
      - "traefik.docker.network=web"
      - "traefik.frontend.rule=Host:ph.saytosid.duckdns.org"
      - "traefik.port=80"
    networks:
      - web


  duckdns:
    image: linuxserver/duckdns
    container_name: duckdns
    environment:
      - TZ=Europe/London
      - SUBDOMAINS=
      - TOKEN=
    restart: unless-stopped
    depends_on:
      - pihole
    networks:
      - web

  nextcloud:
    container_name: nextcloud
    image: wonderfall/nextcloud
    depends_on:
      - nextcloud-db           # If using MySQL
    environment:
      - UID=1000
      - GID=1000
      - UPLOAD_MAX_SIZE=10G
      - APC_SHM_SIZE=128M
      - OPCACHE_MEM_SIZE=128
      - CRON_PERIOD=15m
      - TZ=Europe/Berlin
      - DOMAIN=localhost
      - DB_TYPE=mysql
      - DB_NAME=nextcloud
      - DB_USER=nextcloud
      - DB_PASSWORD=
      - DB_HOST=nextcloud-db
    volumes:
      - ./nextcloud/data:/data
      - ./nextcloud/config:/config
      - ./nextcloud/apps:/apps2
      - ./nextcloud/themes:/nextcloud/themes
    expose:
      - 8888
    labels:
      - "traefik.enable=true"
      - "traefik.backend=nextcloud"
      - "traefik.docker.network=web"
      - "traefik.frontend.rule=Host:cloud.saytosid.duckdns.org"
      - "traefik.port=8888"
    depends_on:
      - nextcloud-db
    networks:
      - web
      - internal

  # If using MySQL
  nextcloud-db:
    container_name: nextcloud-db
    image: mariadb:10
    volumes:
      - ./nextcloud/db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=
    expose:
      - 3306
    networks:
      - internal



 